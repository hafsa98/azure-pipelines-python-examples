trigger:
- master
name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: Build
  jobs:

  - job: 'django_basic'
    strategy:
      matrix:
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
      maxParallel: 1

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip
        pip install -r django-basic/requirements.txt
      displayName: 'Install dependencies'

    - script: |
        pip install pytest-django
        cd django-basic/azuredemo
        pytest --junitxml=../../reports/django-basic.xml
      displayName: 'Run tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'reports/django-basic.xml'
        testRunTitle: '$(Agent.JobName)'
      condition: succeededOrFailed()

  - job: 'django_multi_environment'
    strategy:
      matrix:
        Python36_Django213:
          python.version: '3.6'
          django.version: '2.1.3'
        Python37_Django213:
          python.version: '3.7'
          django.version: '2.1.3'
        Python37_Django214:
          python.version: '3.7'
          django.version: '2.1.4'
      maxParallel: 3

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip
        pip install django==$(django.version)
      displayName: 'Install dependencies'

    - script: |
        pip install pytest-django
        cd django-multi-environment/azuredemo
        pytest --junitxml=../../reports/django-multi-environment.xml
      displayName: 'Run tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'reports/django-multi-environment.xml'
        testRunTitle: '$(Agent.JobName)'
      condition: succeededOrFailed()
 
  

